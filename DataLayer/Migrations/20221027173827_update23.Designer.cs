// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(eShopContext))]
    [Migration("20221027173827_update23")]
    partial class update23
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataLayer.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"), 1L, 1);

                    b.Property<string>("AccountNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BackNr")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentMethodId");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("DataLayer.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypesId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("TypesId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Brand = "Nvida",
                            ImageUrl = "Images\\EggFace.png",
                            IsDeleted = false,
                            Name = "3080 RTX Nvida",
                            Price = 10099.99m,
                            TypesId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            Brand = "Nvida",
                            ImageUrl = "Images\\DinboyWithGlasses.png",
                            IsDeleted = false,
                            Name = "3090 RTX Nvida",
                            Price = 15999.99m,
                            TypesId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            Brand = "LogiTech",
                            ImageUrl = "Images\\ducklingFace.png",
                            IsDeleted = false,
                            Name = "LogiTech Meistro Keyboard",
                            Price = 1599.99m,
                            TypesId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            Brand = "Asus",
                            ImageUrl = "Images\\gundoggo.png",
                            IsDeleted = false,
                            Name = "Asus Motherboard 3000x",
                            Price = 2599.99m,
                            TypesId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            Brand = "AMD",
                            ImageUrl = "Images\\suitdoggo.png",
                            IsDeleted = false,
                            Name = "AMD ThredRipper 9999x",
                            Price = 59999.99m,
                            TypesId = 3
                        });
                });

            modelBuilder.Entity("DataLayer.Models.ProductUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("productUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ProductId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            UserId = 3,
                            ProductId = 1,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "SoftAdmin"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Types", b =>
                {
                    b.Property<int>("TypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypesId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypesId");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            TypesId = 1,
                            Name = "Keyboards"
                        },
                        new
                        {
                            TypesId = 2,
                            Name = "GPU's"
                        },
                        new
                        {
                            TypesId = 3,
                            Name = "CPU's"
                        },
                        new
                        {
                            TypesId = 4,
                            Name = "Motherboard"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserInformationId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserInformationId")
                        .IsUnique()
                        .HasFilter("[UserInformationId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "gigga@gmail.com",
                            IsDeleted = false,
                            Password = "P@ssw0rd",
                            RoleId = 1,
                            UserInformationId = 1,
                            UserName = "Admin"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "megaa@gmail.com",
                            IsDeleted = false,
                            Password = "kodeord",
                            RoleId = 3,
                            UserName = "Rene"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "behemoth@gmail.com",
                            IsDeleted = false,
                            Password = "kodeord",
                            RoleId = 3,
                            UserName = "Benjamin"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.UserInformation", b =>
                {
                    b.Property<int>("UserInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserInformationId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("UserInformationId");

                    b.ToTable("UserInformations");

                    b.HasData(
                        new
                        {
                            UserInformationId = 1,
                            City = "Kolding",
                            Street = "Problembarngade 5",
                            ZipCode = 6000
                        },
                        new
                        {
                            UserInformationId = 2,
                            City = "Sønderborg",
                            Street = "Fyunkergade 2",
                            ZipCode = 6400
                        },
                        new
                        {
                            UserInformationId = 3,
                            City = "Aabenraa",
                            Street = "Sondsgade 4",
                            ZipCode = 6300
                        });
                });

            modelBuilder.Entity("DataLayer.Models.PaymentMethod", b =>
                {
                    b.HasOne("DataLayer.Models.User", "User")
                        .WithMany("PaymentMethod")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Models.Product", b =>
                {
                    b.HasOne("DataLayer.Models.Types", "Types")
                        .WithMany("products")
                        .HasForeignKey("TypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Types");
                });

            modelBuilder.Entity("DataLayer.Models.ProductUser", b =>
                {
                    b.HasOne("DataLayer.Models.Product", "Product")
                        .WithMany("ProductUsers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.User", "User")
                        .WithMany("ProductUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.HasOne("DataLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.UserInformation", "UserInformation")
                        .WithOne("User")
                        .HasForeignKey("DataLayer.Models.User", "UserInformationId");

                    b.Navigation("Role");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("DataLayer.Models.Product", b =>
                {
                    b.Navigation("ProductUsers");
                });

            modelBuilder.Entity("DataLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataLayer.Models.Types", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Navigation("PaymentMethod");

                    b.Navigation("ProductUsers");
                });

            modelBuilder.Entity("DataLayer.Models.UserInformation", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
